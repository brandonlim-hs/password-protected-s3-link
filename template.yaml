AWSTemplateFormatVersion: 2010-09-09

Parameters:
  OriginAccessIdentityComment:
    Type: String
    Default: CloudFront user to access S3
    Description: Any comments about the origin access identity.

  OriginId:
    Type: String
    Default: originId
    Description: A unique identifier for the origin.

  OriginPath:
    Type: String
    Default: ''
    Description: An optional path that appends to the origin domain name, beginning with a /.

  S3BucketName:
    Type: String
    Description: The name of the Amazon S3 bucket.

Resources:
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
          LambdaFunctionAssociations:
            - EventType: viewer-request
              LambdaFunctionARN: !Ref LambdaCloudFrontAuthCheckVersion
          TargetOriginId: !Ref OriginId
          ViewerProtocolPolicy: redirect-to-https
        Enabled: true
        Origins:
          - DomainName: !Sub '${S3BucketName}.s3.amazonaws.com'
            Id: !Ref OriginId
            OriginPath: !Ref OriginPath
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOAI}'
        ViewerCertificate:
          CloudFrontDefaultCertificate: true

  CloudFrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Ref OriginAccessIdentityComment

  LambdaCloudFrontAuthCheck:
    Type: AWS::Lambda::Function
    Properties:
      Code: src/index.js
      Description: Function to check authentication from CloudFront viewer-request trigger
      FunctionName: CloudFrontAuthCheck
      Handler: index.handler
      Role: !GetAtt LambdaRole.Arn
      Runtime: nodejs12.x

  LambdaCloudFrontAuthCheckVersion:
    Type: AWS::Lambda::Version
    Properties:
      FunctionName: !Ref LambdaCloudFrontAuthCheck

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - edgelambda.amazonaws.com
                - lambda.amazonaws.com
        Version: 2012-10-17
      RoleName: lambda-cloudfront-auth-check

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3BucketName
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOAI}'
            Resource: !Sub 'arn:aws:s3:::${S3BucketName}/*'
            Sid: AccessFromCloudFrontOnly
